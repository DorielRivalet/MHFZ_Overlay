name: Automate Git Stats

on:
  workflow_dispatch:
  schedule:
      - cron: '0 0 1 */3 *'  # Run every 3 months at 00:00 UTC on the 1st day of the month

jobs:
  run_scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "Automated Git Stats"
          git config user.email "actions@users.noreply.github.com"

      - name: Check last commit date
        id: check_last_commit
        run: |
          LAST_COMMIT=$(git log -1 --format="%cd" --date=iso-strict)
          echo "{last_commit}={$LAST_COMMIT}" >> $GITHUB_OUTPUT
        shell: bash
  
      - name: Check if commits were made in the last 3 months
        id: check_last_commit_date
        run: |
          LAST_COMMIT_DATE="${{ steps.check_last_commit.outputs.last_commit }}"
          CURRENT_DATE=$(date -u +"%Y-%m-%d")
          DATE_DIFF=$(($(date -u -d $CURRENT_DATE +%s) - $(date -u -d $LAST_COMMIT_DATE +%s)))
          if [ $DATE_DIFF -le 7948800 ]; then
            echo "New commits found since the last 3 months."
          else
            echo "No new commits since the last 3 months. Cancelling the workflow."
            exit 0
          fi
        shell: bash
      
      - name: Install LuaJIT
        run: |
          sudo apt-get update
          sudo apt-get install -y luajit

      - name: Install Lua development files
        run: |
          sudo apt-get install liblua5.1-dev

      - name: Install LuaRocks
        run : |
          wget https://luarocks.org/releases/luarocks-3.8.0.tar.gz
          tar zxpf luarocks-3.8.0.tar.gz
          cd luarocks-3.8.0
          ./configure --with-lua-include=/usr/include/lua5.1/
          make
          sudo make install

      - name: Install Lua dependencies
        run: |
          sudo luarocks install luafilesystem

      - name: Install Python dependencies
        run: |
          pip install -r ./scripts/dependencies/requirements.txt

      - name: Install Ruby and dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          working-directory: ./scripts/dependencies

      - name: Generate Gemfile.lock
        run: |
          cd ./scripts/dependencies
          bundle config set --local deployment 'true'
          bundle install

      - name: Cache Ruby gems
        uses: actions/cache@v3
        with:
          path: ./scripts/dependencies/vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-

      - name: Generate git.txt
        run: |
          mkdir -p ./scripts/input
          git log --numstat > ./scripts/input/git.txt

      - name: Count lines from git.txt
        run: |
          echo "Total lines in git text file: "
          wc -l < ./scripts/input/git.txt

      - name: Anonymize emails
        run: |
          luajit ./scripts/rename_emails.lua

      - name: Create git_anonymized.txt artifact
        uses: actions/upload-artifact@v3
        with:
          name: git-text-file
          path: ./scripts/input/git_anonymized.txt

      - name: Remove git.txt
        run: |
          rm ./scripts/input/git.txt

      - run: bundle exec rake
        working-directory: ./scripts/dependencies

      - name: Generate images using Python
        run: |
          cd ./scripts
          python commits_per_hour.py; python commits_per_weekday.py

      - name: Remove git_anonymized.txt
        run: |
            rm ./scripts/input/git_anonymized.txt

      - name: Commit and push changes
        run: |
          git add ./scripts/output/commit_types.png ./scripts/output/commits_over_time.png ./scripts/output/commits_per_day_of_week.png ./scripts/output/commits_per_hour.png
          git commit -m "chore(scripts): update git statistics images"
          git push

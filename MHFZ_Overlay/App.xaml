<!--
// © 2023 The mhfz-overlay Authors.
// Use of this source code is governed by a MIT license that can be
// found in the LICENSE file.
-->
    <Application x:Class="MHFZ_Overlay.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:MHFZ_Overlay"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <local:Settings x:Key="Settings"/>
            <Style x:Key="WinAll" TargetType="{x:Type Window}">
                <!--<Setter Property="FontFamily" Value="Source Code Pro" />-->
                <Setter Property="FontSize" Value="16" />
            </Style>
            <Style x:Key="MainTextBox" TargetType="{x:Type TextBlock}">
                <!--<Setter Property="FontFamily" Value="Source Code Pro" />-->
                <Setter Property="FontSize" Value="{Binding Source={StaticResource Settings}, Path=FontSize}" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="5" />
                <Setter Property="Background" Value="{Binding Source={StaticResource Settings},Path=TextBackGroundColor}" />
                <Setter Property="Foreground" Value="{Binding Source={StaticResource Settings},Path=TextColor}" />
            </Style>
            <Style x:Key="ValueTextBox" BasedOn="{StaticResource MainTextBox}" TargetType="{x:Type TextBlock}">
                <Setter Property="TextAlignment" Value="Right"/>
            </Style>
            <Style x:Key="DefaultButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="#1e1e2e"  />
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#cdd6f4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#5c5c5c" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                                 FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>

                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="MyProgressBar"  TargetType="{x:Type ProgressBar}">
                <Setter Property="Background" Value="#00000000"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <!--<Setter Property="FontFamily" Value="Source Code Pro"/>-->
            </Style>
            <Style x:Key="ConfigSingleGrid" TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="20"/>
                <Setter Property="Background" Value="#1e1e2e" />
            </Style>
            <Style x:Key="ConfigTextBox" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center"  />
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <Style x:Key="ConfigTextField" TargetType="{x:Type TextBox}">
                <Setter Property="BorderBrush" Value="#1e1e2e"  />
                <Setter Property="BorderThickness" Value="0,0,0,1.5"  />
                <Setter Property="Margin" Value="5,8,5,8"  />
                <Setter Property="Background" Value="#1e1e2e"  />
                <Setter Property="Foreground" Value="#cdd6f4" />
            </Style>
            <Style x:Key="ConfigBottomButtons" TargetType="{x:Type Button}">
                <Setter Property="HorizontalAlignment" Value="Left"   />
                <Setter Property="Foreground" Value="#cdd6f4"/>
                <Setter Property="Background" Value="#1e1e2e" />
                <Setter Property="BorderBrush" Value="#1e1e2e"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="#5c5c5c" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                                 FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>

                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation
                                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                            FillBehavior="HoldEnd" Duration="0:0:0.25" AutoReverse="False" RepeatBehavior="1x"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ConfigCheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="HorizontalAlignment" Value="Center"  />
                <Setter Property="VerticalAlignment" Value="Center"  />
                <Setter Property="Background" Value="#1e1e2e" />
            </Style>
            <Style x:Key="ConfigColorPicker" TargetType="xctk:ColorPicker">
                <Setter Property="Margin" Value="5" />
                <Setter Property="BorderBrush" Value="#1e1e2e"  />
                <Setter Property="BorderThickness" Value="0,0,0,1.5"  />
                <Setter Property="Foreground" Value="#cdd6f4" />
                <Setter Property="HeaderForeground" Value="#cdd6f4" />
                <Setter Property="TabForeground" Value="#cdd6f4" />
                <Setter Property="HeaderBackground" Value="#1e1e2e" />
                <Setter Property="DropDownBackground" Value="#1e1e2e" />
                <Setter Property="TabBackground" Value="#1e1e2e" />
                <Setter Property="Background" Value="#1e1e2e" />
                <Setter Property="ColorMode" Value="ColorCanvas"/>
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <FontFamily x:Key="Source Code Pro">pack://application:,,,UI/Fonts/#Source Code Pro</FontFamily>
            <FontFamily x:Key="Source Code Pro Bold">pack://application:,,,UI/Fonts/#Source Code Pro Bold</FontFamily>
            <FontFamily x:Key="Open Sans">pack://application:,,,UI/Fonts/#Open Sans Regular</FontFamily>
            <FontFamily x:Key="Open Sans Bold">pack://application:,,,UI/Fonts/#Open Sans Bold</FontFamily>
            <FontFamily x:Key="Open Sans Italic">pack://application:,,,UI/Fonts/#Open Sans Italic</FontFamily>
            <FontFamily x:Key="Monster hunter">pack://application:,,,UI/Fonts/#Monster hunter</FontFamily>
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            https://stackoverflow.com/questions/3425720/xaml-the-property-resources-is-set-more-than-once#3425956
            -->
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:CustomColorTheme BaseTheme="Dark" PrimaryColor="#a6e3a1" SecondaryColor="#b4befe" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />



                <ResourceDictionary Source="MaterialDesignThemes.Overrides.xaml"/>
                <!-- 
                    If you overrides XAML is in a separate assembly you will need to reference it like this:
                    <ResourceDictionary Source="pack://application:,,,/Your.Assembly;component/Themes/MaterialDesignThemes.Overrides.xaml" />
                -->
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
